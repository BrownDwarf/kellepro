FUNCTION readspec_txt, spectrum_file,silent=silent

;add NORMAL keyword for option to normalize.

unit=1
data_file = spectrum_file

object=(strsplit(data_file,'.txt',/extract,/regex))[0]
IF ~keyword_set(silent) THEN print, object

n_lines=FILE_LINES(data_file)

openr, unit, data_file

;Read in FITS header

comment = ' '
blank = ' '
file = ' '

READF, unit, comment
header_check = strmid(comment,0,4)
IF header_check eq 'BITP' THEN header=1 ELSE header=0

IF header eq 1 THEN BEGIN

    endy = 0
    WHILE endy ne 1 DO BEGIN
        READF, unit, comment
        check = strmid(comment,0,4)
        IF check eq 'FILE' THEN file = strmid(comment,11,16)
        IF check eq 'CDEL' THEN pix_scale = float(strmid(comment,10,30))
        IF check eq 'END ' THEN endy = 1
    ENDWHILE

;Read in blanks + first line of data

    WHILE blank eq ' ' DO BEGIN
	READF, unit, comment
	blank = strmid(comment,0,1)
    ENDWHILE

ENDIF

;Read in data
one_line = DBLARR(2)
wavelength = DBLARR(n_lines)
flux = DBLARR(n_lines)
x=0

WHILE NOT EOF(1) DO BEGIN
	READF, 1, one_line
	wavelength(x) = one_line(0)
	flux(x) = one_line(1)
	x = x + 1
ENDWHILE

close, unit

;normalize if NORMAL keyword set
IF keyword_set(normal_set) THEN BEGIN
    pix_scale = wavelength[1] - wavelength[0]
    startw = 8240. & endw = 8260. ;assume L dwarf
    a = where(wavelength ge startw-pix_scale/2 AND wavelength le endw+pix_scale/2)
    num = avgflux(startw,endw,pix_scale,wavelength[a],flux[a])
    flux=flux/num
ENDIF

spectrum=DBLARR(2, x)
spectrum[0,*] = wavelength[0:x-1]
spectrum[1,*] = flux[0:x-1]

RETURN, spectrum

END
